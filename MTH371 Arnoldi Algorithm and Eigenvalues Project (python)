{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMEba8tDMBvQJs5THDucMh2"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["##Arnoldi Algorithm and Eigenvalues Kira Novitchkova-Burbank\n","\n","\n","This is the 4th homework.\n","\n","Given a s.p.d. matrix A of size n x n in CSR format. For a given m (m less or equal to n) write python function implementing Arnoldi algorithm. It should provide on output a matrix Q of m orthonormal columns and a matrix T such that T= Q^T AQ. Note that T should be tridiagonal and symmetric (up to round-off error).\n","\n","Compute the eigenvalues of A and the eigenvalues of T using function\n","\n","numpy.linalg.eigvalsh\n","\n","\n","Compare the smallest and the largest eigenvalues of A and T (they should be close and get closer if you increase m).\n","\n","When m =n, the eigenvalues of A and T should be the same up to round-off.\n","\n","For matrices A use the ones posted for homework 1 (converted to CSR format)"],"metadata":{"id":"t8wwQ3lo_4oM"}},{"cell_type":"code","source":["import numpy as np\n","from scipy.sparse import coo_matrix\n","from scipy.sparse import csr_matrix\n","from pandas import read_csv"],"metadata":{"id":"JrdShczZ-4Gh"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def read_matrix(filepath):\n","    df = read_csv(filepath,\n","                  sep=\" \",\n","                  header=None)\n","    df.columns = [\"col\", \"row\", \"data\"]\n","    mtx = coo_matrix((df[\"data\"], (df[\"row\"], df[\"col\"]))).tocsr()\n","    return mtx\n"],"metadata":{"id":"TzjAaFw_--CU"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["###Testing Different Matrices"],"metadata":{"id":"durlz9Q9VPv9"}},{"cell_type":"code","source":["#25.txt\n","matrix_25 = read_matrix('25-1.txt')\n","converted_to_csr_25 = matrix_25.tocsr()\n","\n","#16.txt\n","matrix_16 = read_matrix('16.txt')\n","converted_to_csr_16 = matrix_16.tocsr()\n","\n","#64.txt\n","matrix_64 = read_matrix('64.txt')\n","converted_to_csr_64 = matrix_64.tocsr()"],"metadata":{"id":"RoH65Mpf_D10"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from numpy import linalg\n","\n","#changing output from scientific notation to floats\n","np.set_printoptions(suppress=True)\n","\n","def arnoldi(A, Q, r, m):\n","\n","  T = np.zeros((m,m))\n","\n","  #normalize the input vector\n","  Q[:,0] =r/np.linalg.norm(r,2) #changed first column\n","\n","  for k in range(0, m-1):\n","    v = A * Q[:,k]\n","    Q[:,k+1] = v\n","\n","    for j in range(0,k+1):\n","      Q[:,k+1] -= np.dot(v, Q[:,j]) * Q[:,j]\n","    Q[:,k+1] /= np.linalg.norm(Q[:,k+1])\n","\n","  T = Q.T @ A @ Q\n","\n","\n","  #finding eigenvalues of T and A and making A dense for linalg.eigvalsh to work on it\n","  eigval_T=linalg.eigvalsh(T)\n","\n","  A_dense = A.todense()\n","  eigval_A=linalg.eigvalsh(A_dense)\n","\n","  #printing the biggest and smallest eigenvalues of A\n","  print(\"\\nA max value:\", eigval_A[-1])\n","  print(\"A min value:\", eigval_A[0])\n","\n","  #printing the 3 biggest and the 3 smallest eigenvalues of T\n","  print(\"\\n3rd biggest eigenvalue of T: \\n\", eigval_T[-3])\n","  print(\"2nd biggest eigenvalue of T: \\n\", eigval_T[-2])\n","  print(\"Biggest eigenvalue of T: \\n\", eigval_T[-1])\n","\n","  print(\"\\n3rd smallest eigenvalue of T: \\n\", eigval_T[2])\n","  print(\"2nd smallest eigenvalue of T: \\n\", eigval_T[1])\n","  print(\"Smallest eigenvalue of T: \\n\", eigval_T[0])\n","\n","  print(\"----------------------------------------\")\n","\n","  return Q, T\n","\n"],"metadata":{"id":"Lmd-FSByoOSE"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["###Testing function with 25.txt matrix with different m's"],"metadata":{"id":"fLjhC5MnWGft"}},{"cell_type":"code","source":["#csr version of 25.txt for A\n","A_25 = converted_to_csr_25\n","\n","n = A_25.shape[0]\n","\n","r = np.random.randint(low=0, high=10, size=n) #r: initial vector (length n)\n","\n","#first m\n","m_1 = 15\n","print(\"\\nfirst m:\", m_1)\n","Q = np.zeros((n,m_1))\n","\n","Q, T = arnoldi(A_25, Q, r, m_1)\n","\n","#second m\n","m_2 = 20\n","print(\"\\nsecond m:\", m_2)\n","Q = np.zeros((n,m_2))\n","\n","Q, T = arnoldi(A_25, Q, r, m_2)\n","\n","#third m\n","m_3 = 25\n","print(\"\\nthird m:\", m_3)\n","Q = np.zeros((n,m_3))\n","\n","Q, T = arnoldi(A_25, Q, r, m_3)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"k0IBMK8KWD9U","executionInfo":{"status":"ok","timestamp":1685062861274,"user_tz":420,"elapsed":30,"user":{"displayName":"Kira Burbank","userId":"10437625992165419595"}},"outputId":"ed3bcfef-0dbb-46bb-f5d6-3c1483ef3978"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","first m: 15\n","\n","A max value: 1.0\n","A min value: 0.009999999999999506\n","\n","3rd biggest eigenvalue of T: \n"," 0.6812920690571145\n","2nd biggest eigenvalue of T: \n"," 0.8254041852680174\n","Biggest eigenvalue of T: \n"," 0.9999999999999987\n","\n","3rd smallest eigenvalue of T: \n"," 0.04027844555615442\n","2nd smallest eigenvalue of T: \n"," 0.024403698193939914\n","Smallest eigenvalue of T: \n"," 0.011716864883848606\n","----------------------------------------\n","\n","second m: 20\n","\n","A max value: 1.0\n","A min value: 0.009999999999999506\n","\n","3rd biggest eigenvalue of T: \n"," 0.6812920690579615\n","2nd biggest eigenvalue of T: \n"," 0.8254041852680186\n","Biggest eigenvalue of T: \n"," 0.9999999999999997\n","\n","3rd smallest eigenvalue of T: \n"," 0.023520956542231974\n","2nd smallest eigenvalue of T: \n"," 0.013404439404606385\n","Smallest eigenvalue of T: \n"," 0.010380157665195117\n","----------------------------------------\n","\n","third m: 25\n","\n","A max value: 1.0\n","A min value: 0.009999999999999506\n","\n","3rd biggest eigenvalue of T: \n"," 0.6812920690579611\n","2nd biggest eigenvalue of T: \n"," 0.8254041852680185\n","Biggest eigenvalue of T: \n"," 1.0\n","\n","3rd smallest eigenvalue of T: \n"," 0.01467799267611127\n","2nd smallest eigenvalue of T: \n"," 0.012115276586328652\n","Smallest eigenvalue of T: \n"," 0.009999999999989573\n","----------------------------------------\n"]}]},{"cell_type":"markdown","source":["###Testing function with 16.txt matrix with different m's"],"metadata":{"id":"bGygJ_qee7t_"}},{"cell_type":"code","source":["#csr version of 16.txt for A\n","A_16 = converted_to_csr_16\n","\n","n = A_16.shape[0]\n","\n","r = np.random.randint(low=0, high=10, size=n) #r: initial vector (length n)\n","\n","#first m\n","m_1 = 6\n","print(\"\\nfirst m:\", m_1)\n","Q = np.zeros((n,m_1))\n","\n","Q, T = arnoldi(A_16, Q, r, m_1)\n","\n","#second m\n","m_2 = 10\n","print(\"\\nsecond m:\", m_2)\n","Q = np.zeros((n,m_2))\n","\n","Q, T = arnoldi(A_16, Q, r, m_2)\n","\n","#third m\n","m_3 = 16\n","print(\"\\nthird m:\", m_3)\n","Q = np.zeros((n,m_3))\n","\n","Q, T = arnoldi(A_16, Q, r, m_3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"S1jem9Nbe_5j","executionInfo":{"status":"ok","timestamp":1685062861274,"user_tz":420,"elapsed":23,"user":{"displayName":"Kira Burbank","userId":"10437625992165419595"}},"outputId":"42b22425-c4b4-4766-e2b1-3a38a20fc4e8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","first m: 6\n","\n","A max value: 103.37213642637803\n","A min value: 0.8148648689704294\n","\n","3rd biggest eigenvalue of T: \n"," 9.473726320747458\n","2nd biggest eigenvalue of T: \n"," 15.932187065549796\n","Biggest eigenvalue of T: \n"," 103.37213642624032\n","\n","3rd smallest eigenvalue of T: \n"," 6.141788243321665\n","2nd smallest eigenvalue of T: \n"," 3.6308472183242513\n","Smallest eigenvalue of T: \n"," 0.8340244827158753\n","----------------------------------------\n","\n","second m: 10\n","\n","A max value: 103.37213642637803\n","A min value: 0.8148648689704294\n","\n","3rd biggest eigenvalue of T: \n"," 15.928937550113748\n","2nd biggest eigenvalue of T: \n"," 17.322695023231663\n","Biggest eigenvalue of T: \n"," 103.37213642637803\n","\n","3rd smallest eigenvalue of T: \n"," 3.346292421604326\n","2nd smallest eigenvalue of T: \n"," 2.1110035845738415\n","Smallest eigenvalue of T: \n"," 0.8153160632195646\n","----------------------------------------\n","\n","third m: 16\n","\n","A max value: 103.37213642637803\n","A min value: 0.8148648689704294\n","\n","3rd biggest eigenvalue of T: \n"," 15.928954982345614\n","2nd biggest eigenvalue of T: \n"," 17.32470839578023\n","Biggest eigenvalue of T: \n"," 103.37213642637795\n","\n","3rd smallest eigenvalue of T: \n"," 1.9830133136934907\n","2nd smallest eigenvalue of T: \n"," 1.7725252442918291\n","Smallest eigenvalue of T: \n"," 0.814864868970394\n","----------------------------------------\n"]}]},{"cell_type":"markdown","source":["###Testing function with 64.txt matrix with different m's\n","Note: The max T eigenvalue is bigger than the max A eigenvalue if the m >= 25. But, Mr. Vassilevski said that I can turn this in as it is."],"metadata":{"id":"ea6IwzCDgFSh"}},{"cell_type":"code","source":["#csr version of 64.txt for A\n","A_64 = converted_to_csr_64\n","\n","n = A_64.shape[0]\n","\n","r = np.random.randint(low=0, high=10, size=n) #r: initial vector (length n)\n","\n","#first m\n","m_1 = 10\n","print(\"\\nfirst m:\", m_1)\n","Q = np.zeros((n,m_1))\n","\n","Q, T = arnoldi(A_64, Q, r, m_1)\n","\n","#second m\n","m_2 = 18\n","print(\"\\nsecond m:\", m_2)\n","Q = np.zeros((n,m_2))\n","\n","Q, T = arnoldi(A_64, Q, r, m_2)\n","\n","#third m\n","m_3 = 24\n","print(\"\\nthird m:\", m_3)\n","Q = np.zeros((n,m_3))\n","\n","Q, T = arnoldi(A_64, Q, r, m_3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"w4nFE21jgE_q","executionInfo":{"status":"ok","timestamp":1685062861486,"user_tz":420,"elapsed":224,"user":{"displayName":"Kira Burbank","userId":"10437625992165419595"}},"outputId":"2eb82c5f-eeaa-495a-a9f5-5aa4b172276b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","first m: 10\n","\n","A max value: 56.11213528661571\n","A min value: 0.32844678081569545\n","\n","3rd biggest eigenvalue of T: \n"," 14.606607273526706\n","2nd biggest eigenvalue of T: \n"," 18.24507763629788\n","Biggest eigenvalue of T: \n"," 56.112135286614475\n","\n","3rd smallest eigenvalue of T: \n"," 2.8665163864256282\n","2nd smallest eigenvalue of T: \n"," 1.1442058973215181\n","Smallest eigenvalue of T: \n"," 0.34805534017190076\n","----------------------------------------\n","\n","second m: 18\n","\n","A max value: 56.11213528661571\n","A min value: 0.32844678081569545\n","\n","3rd biggest eigenvalue of T: \n"," 17.29833060291247\n","2nd biggest eigenvalue of T: \n"," 18.245389618836327\n","Biggest eigenvalue of T: \n"," 56.11213528661577\n","\n","3rd smallest eigenvalue of T: \n"," 1.248411811285248\n","2nd smallest eigenvalue of T: \n"," 0.6390776148316156\n","Smallest eigenvalue of T: \n"," 0.3285122768570241\n","----------------------------------------\n","\n","third m: 24\n","\n","A max value: 56.11213528661571\n","A min value: 0.32844678081569545\n","\n","3rd biggest eigenvalue of T: \n"," 17.298339086477938\n","2nd biggest eigenvalue of T: \n"," 18.24538961909448\n","Biggest eigenvalue of T: \n"," 56.11213528661577\n","\n","3rd smallest eigenvalue of T: \n"," 0.9297347791208199\n","2nd smallest eigenvalue of T: \n"," 0.6347031054830142\n","Smallest eigenvalue of T: \n"," 0.32844791487382985\n","----------------------------------------\n"]}]}]}